
# 修改粒子滤波器以接受不同的 w 先验
pf=function(y, N, w_prior) {
  particles=data.frame(
    phi=exp(rtruncnorm(N,a=-1,b=1,mean=0.1,sd=2)),
    tau=rgamma(N,a,b),
    w=runif(N,w_prior[1],w_prior[2]),
    x=7.75
  )
  
  updated.particles=list()
  
  # Iterating over each time point
  for (t in 1:length(y)) {
    # Update particles
    epsilon=rnorm(N,0.01,sqrt(1/particles$tau))
    particles$x=particles$phi*particles$x+epsilon
    
    # Calculate likelihood weights
    weights=dnorm(y[t], mean=particles$x, sd=sqrt(1/particles$w))
    weights=weights/sum(weights)
    
    # Resampling
    index=sample(1:N, N, replace = TRUE, prob = weights)
    particles=particles[index, ]
    
    # Store updated particles
    updated.particles[[t]]=particles
  }
  
  return(updated.particles)
}


# 设置先验
w_priors=list(c(0, 200), c(0, 600), c(0, 1000))
set.seed(5090)
# 为每个先验运行粒子滤波器
estimates=lapply(w_priors, function(prior) {
  results=pf(y[,2], N, prior)
  sapply(results, function(p) mean(p$x))
})


########################################################################################### Table 3
# Calculate MSE and MAE for each w prior
error_summary=data.frame(Prior = character(), MSE = numeric(), MAE = numeric())
for (i in 1:length(w_priors)) {
  estimated_values=estimates[[i]]
  mse_val=MSE(y[,2], estimated_values)
  mae_val=MAE(y[,2], estimated_values)
  error_summary=rbind(error_summary, data.frame(Prior = paste("w:", w_priors[[i]][1], "-", w_priors[[i]][2]), MSE = mse_val, MAE = mae_val))
}

########################################################################################## Figure 8
ggplot(df_long, aes(x = time, y = value, color = label)) +
  geom_line() +
  scale_color_manual(values = c("black", rainbow(length(w_priors)))) +
  ggtitle("Comparison of Observed and Estimated States with Different w Priors") +
  xlab("Time") +
  ylab("State") +
  theme_minimal() +
  guides(color = guide_legend(title = "State / w Prior"))
  

print(error_summary)
